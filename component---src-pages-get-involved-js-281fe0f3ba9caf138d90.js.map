{"version":3,"sources":["webpack:///./src/components/get-involved/getInvolvedInfo.js","webpack:///./src/components/get-involved/getInvolvedForm.js","webpack:///./src/pages/get-involved.js","webpack:///./static/BG.jpg","webpack:///./src/styles/components/get-involved/getInvolvedInfo.module.scss"],"names":["GetInvolvedInfo","className","getInvolvedInfoStyles","container","infoContainer","bg","src","alt","instruction","GetInvolvedForm","useState","disabledButton","setDisabledButton","message","setMessage","useForm","register","handleSubmit","errors","reset","url","process","replace","onSubmit","data","a","console","log","fetch","method","headers","body","JSON","stringify","res","status","formStyles","form","htmlFor","label","name","ref","required","firstName","errorMessage","lastName","defaultValue","value","selected","university","pattern","email","phoneNumber","style","resize","width","rows","type","disabled","GetInvolved","Helmet","content","isOpaque","dark","module","exports"],"mappings":"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","file":"component---src-pages-get-involved-js-281fe0f3ba9caf138d90.js","sourcesContent":["import React from \"react\"\nimport getInvolvedInfoStyles from \"../../styles/components/get-involved/getInvolvedInfo.module.scss\"\nimport bg from \"../../../static/BG.jpg\"\n\nexport default function GetInvolvedInfo() {\n    return (\n        <div className={getInvolvedInfoStyles.container}>\n            <h1>Get Involved</h1>\n            <div className={getInvolvedInfoStyles.infoContainer}>\n                <div>\n                    <p>\n                        Get involved with a KCSOC near you. We are always open\n                        to all university members and we want to share our love\n                        of spirituality, meditation and philosophy as far and\n                        wide as we can.\n                    </p>\n                    <p>\n                        After a full year of KCSOC online over lockdown, we're\n                        extremely excited to announce that KCSOCs are returning\n                        to in-person events across the country! Get Involved\n                        today, to make new spiritual friendships, learn\n                        incredible mind-blowing philsophy and experience the\n                        ultimate happiness!\n                    </p>\n                </div>\n\n                <img\n                    className={getInvolvedInfoStyles.bg}\n                    src={bg}\n                    alt=\"Bhagavad Gita\"\n                />\n            </div>\n            <p className={getInvolvedInfoStyles.instruction}>\n                Fill out your information below and a member of the KCSOC\n                National team will reach out to help find the right KCSOC for\n                you.\n            </p>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport formStyles from \"../../styles/form.module.scss\"\n\nexport default function GetInvolvedForm() {\n    const [disabledButton, setDisabledButton] = useState(false)\n    const [message, setMessage] = useState(\"\")\n\n    const { register, handleSubmit, errors, reset } = useForm()\n\n    const url = process.env.GATSBY_SERVER_URL.replace(/\\/$/, \"\")\n\n    const onSubmit = async data => {\n        console.log(data)\n        try {\n            setDisabledButton(true)\n            setMessage(\"\")\n            const res = await fetch(`${url}/forms/get-involved`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(data),\n            })\n            reset()\n            if (res.status === 201) {\n                setMessage(\"Form submitted successfully\")\n            } else {\n                setMessage(\"Form submission failed\")\n            }\n\n            setDisabledButton(false)\n        } catch (e) {\n            setDisabledButton(false)\n\n            console.log(e)\n        }\n    }\n\n    return (\n        <div className={formStyles.container}>\n            <form className={formStyles.form} onSubmit={handleSubmit(onSubmit)}>\n                <label htmlFor=\"firstName\" className={formStyles.label}>\n                    First Name\n                </label>\n                <input name=\"firstName\" ref={register({ required: true })} />\n                {errors.firstName && (\n                    <p className={formStyles.errorMessage}>\n                        First name is required.\n                    </p>\n                )}\n\n                <label htmlFor=\"lastName\" className={formStyles.label}>\n                    Last Name\n                </label>\n                <input name=\"lastName\" ref={register({ required: true })} />\n                {errors.lastName && (\n                    <p className={formStyles.errorMessage}>\n                        Last name is required.\n                    </p>\n                )}\n\n                <label htmlFor=\"university\" className={formStyles.label}>\n                    University\n                </label>\n                <select\n                    name=\"university\"\n                    defaultValue=\"Select\"\n                    ref={register({ required: true })}\n                >\n                    <option value=\"\" selected>\n                        Select\n                    </option>\n                    <option value=\"Not affiliated / Other University\">\n                        Not affiliated to a university / Other\n                    </option>\n                    <option value=\"Anglia Ruskin\">Anglia Ruskin</option>\n                    <option value=\"Aston\">Aston</option>\n                    <option value=\"Birmingham\">Birmingham</option>\n                    <option value=\"Birmingham City\">Birmingham City</option>\n                    <option value=\"Brighton and Sussex\">\n                        Brighton and Sussex\n                    </option>\n                    <option value=\"Bristol\">Bristol</option>\n                    <option value=\"Brunel\">Brunel</option>\n                    <option value=\"Cambridge\">Cambridge</option>\n                    <option value=\"City\">City</option>\n                    <option value=\"Coventry\">Coventry</option>\n                    <option value=\"De Montfort\">De Montfort</option>\n                    <option value=\"East London\">East London</option>\n                    <option value=\"Edinburgh\">Edinburgh</option>\n                    <option value=\"Glasgow\">Glasgow</option>\n                    <option value=\"Hertfordshire\">Hertfordshire</option>\n                    <option value=\"Imperial\">Imperial</option>\n                    <option value=\"KCL\">KCL</option>\n                    <option value=\"Kent\">Kent</option>\n                    <option value=\"Kingston\">Kingston</option>\n                    <option value=\"Lincolnshire\">Lincolnshire</option>\n                    <option value=\"London Goldsmiths\">Goldsmiths</option>\n                    <option value=\"London Met\">London Met</option>\n                    <option value=\"London Southbank\">London Southbank</option>\n                    <option value=\"Loughborough\">Loughborough</option>\n                    <option value=\"Manchester Met\">Manchester Met</option>\n                    <option value=\"Nottingham\">Nottingham</option>\n                    <option value=\"Nottingham Trent\">Nottingham Trent</option>\n                    <option value=\"Oxford\">Oxford</option>\n                    <option value=\"Queen Mary\">Queen Mary</option>\n                    <option value=\"Reading\">Reading</option>\n                    <option value=\"Roehampton\">Roehampton</option>\n                    <option value=\"SOAS\">SOAS</option>\n                    <option value=\"Southampton\">Southampton</option>\n                    <option value=\"St George's\">St George's</option>\n                    <option value=\"Staffordshire\">Staffordshire</option>\n                    <option value=\"UCL\">UCL</option>\n                    <option value=\"Warwick\">Warwick</option>\n                </select>\n                {errors.university && (\n                    <p className={formStyles.errorMessage}>\n                        University is required.\n                    </p>\n                )}\n                <label htmlFor=\"course\" className={formStyles.label}>\n                    Course\n                </label>\n                <input name=\"course\" ref={register({ required: true })} />\n\n                <label htmlFor=\"email\" className={formStyles.label}>\n                    Email Address\n                </label>\n                <input\n                    name=\"email\"\n                    ref={register({\n                        required: true,\n                        pattern: {\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                            message: \"Hello\",\n                        },\n                    })}\n                />\n                {errors.email && !errors.email.message && (\n                    <p className={formStyles.errorMessage}>\n                        Email address is required.\n                    </p>\n                )}\n                {errors.email && errors.email.message && (\n                    <p className={formStyles.errorMessage}>\n                        Valid email address required.\n                    </p>\n                )}\n\n                <label htmlFor=\"phoneNumber\" className={formStyles.label}>\n                    Phone Number\n                </label>\n                <input name=\"phoneNumber\" ref={register({ required: true })} />\n                {errors.phoneNumber && (\n                    <p className={formStyles.errorMessage}>\n                        Phone number is required.\n                    </p>\n                )}\n                <label htmlFor=\"studentID\" className={formStyles.label} ref={register({ required: true })}>\n                    Student ID\n                </label>\n                <input name=\"studentID\" ref={register({ required: true })} />\n\n                <label\n                    htmlFor=\"somethingInteresting\"\n                    className={formStyles.label}\n                >\n                    Tell us something interesting about yourself\n                </label>\n                <textarea\n                    style={{\n                        resize: \"none\",\n                        \"-webkit-box-sizing\": \"border-box\",\n                        \"-moz-box-sizing\": \"border-box\",\n                        \"box-sizing\": \"border-box\",\n                        width: \"100%\",\n                    }}\n                    name=\"somethingInteresting\"\n                    rows={4}\n                    ref={register({ required: false })}\n                />\n\n                <input type=\"submit\" disabled={disabledButton} />\n\n                <p className={formStyles.message}>{message}</p>\n            </form>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport FadeIn from \"../components/fadeIn\"\nimport Header from \"../components/header\"\nimport GetInvolvedInfo from \"../components/get-involved/getInvolvedInfo\"\nimport GetInvolvedForm from \"../components/get-involved/getInvolvedForm\"\nimport Layout from \"../components/layout\"\n\nexport default function GetInvolved() {\n    return (\n        <Layout>\n            <Helmet>\n                <title>Get Involved | KCSOC</title>\n                <meta\n                    name=\"description\"\n                    content=\"Get involved with KCSOC. Sign up to our events!\"\n                />\n            </Helmet>\n            <FadeIn>\n                <Header isOpaque={true} dark={true} />\n                <GetInvolvedInfo />\n                <GetInvolvedForm />\n            </FadeIn>\n        </Layout>\n    )\n}\n","module.exports = __webpack_public_path__ + \"static/BG-b1e5936c4d772445d06c43b5ae13b44e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"getInvolvedInfo-module--container--1qwYC\",\"infoContainer\":\"getInvolvedInfo-module--info-container--pi8t8\",\"instruction\":\"getInvolvedInfo-module--instruction--3BIU1\",\"bg\":\"getInvolvedInfo-module--bg--1kxdM\"};"],"sourceRoot":""}