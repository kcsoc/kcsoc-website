{"version":3,"sources":["webpack:///./static/chanting.jpg","webpack:///./src/styles/components/set-up-a-kcsoc/setUpAKCSOCInfo.module.scss","webpack:///./src/components/set-up-a-kcsoc/setUpAKCSOCInfo.js","webpack:///./src/components/set-up-a-kcsoc/setUpAKCSOCForm.js","webpack:///./src/pages/set-up-a-kcsoc.js"],"names":["module","exports","SetUpAKCSOCInfo","className","SetUpAKCSOCInfoStyles","container","infoContainer","chanting","src","alt","instruction","SetUpAKCSOCForm","useState","disabledButton","setDisabledButton","message","setMessage","useForm","register","handleSubmit","errors","reset","url","process","replace","onSubmit","data","a","fetch","method","headers","body","JSON","stringify","res","status","console","log","formStyles","form","htmlFor","label","name","ref","required","firstName","errorMessage","lastName","pattern","value","email","phoneNumber","type","disabled","SetUpAKCSOC","Helmet","content","isOpaque","dark"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,wD,uBCC3CD,EAAOC,QAAU,CAAC,UAAY,2CAA2C,cAAgB,gDAAgD,YAAc,6CAA6C,SAAW,4C,wLCGhM,SAASC,IACpB,OACI,yBAAKC,UAAWC,IAAsBC,WAClC,8CACA,6BACI,yBAAKF,UAAWC,IAAsBE,eAClC,6BACI,6RAQA,wHAIA,4MAQJ,yBACIH,UAAWC,IAAsBG,SACjCC,IAAKD,IACLE,IAAI,cAGZ,uBAAGN,UAAWC,IAAsBM,aAApC,wH,sECjCD,SAASC,IACpB,MAA4CC,oBAAS,GAA9CC,EAAP,KAAuBC,EAAvB,KACA,EAA8BF,mBAAS,IAAhCG,EAAP,KAAgBC,EAAhB,KAEA,EAAkDC,cAA1CC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,OAAQC,EAAxC,EAAwCA,MAElCC,EAAMC,4BAA8BC,QAAQ,MAAO,IAEnDC,EAAQ,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEAETb,GAAkB,GAClBE,EAAW,IAHF,SAISY,MAASN,EAAJ,wBAAgC,CACnDO,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KAThB,OAIHQ,EAJG,OAWTb,IACmB,MAAfa,EAAIC,OACJnB,EAAW,+BAEXA,EAAW,0BAGfF,GAAkB,GAlBT,kDAoBTA,GAAkB,GAElBsB,QAAQC,IAAR,MAtBS,0DAAH,sDA0Bd,OACI,yBAAKlC,UAAWmC,IAAWjC,WACvB,0BAAMF,UAAWmC,IAAWC,KAAMd,SAAUN,EAAaM,IACrD,2BAAOe,QAAQ,YAAYrC,UAAWmC,IAAWG,OAAjD,cACA,2BAAOC,KAAK,YAAYC,IAAKzB,EAAS,CAAE0B,UAAU,MACjDxB,EAAOyB,WACJ,uBAAG1C,UAAWmC,IAAWQ,cAAzB,2BAIJ,2BAAON,QAAQ,WAAWrC,UAAWmC,IAAWG,OAAhD,aACA,2BAAOC,KAAK,WAAWC,IAAKzB,EAAS,CAAE0B,UAAU,MAChDxB,EAAO2B,UACJ,uBAAG5C,UAAWmC,IAAWQ,cAAzB,0BAIJ,2BAAON,QAAQ,QAAQrC,UAAWmC,IAAWG,OAA7C,iBACA,2BACIC,KAAK,QACLC,IAAKzB,EAAS,CACV0B,UAAU,EACVI,QAAS,CACLC,MAAO,2CACPlC,QAAS,aAIpBK,EAAO8B,QAAU9B,EAAO8B,MAAMnC,SAC3B,uBAAGZ,UAAWmC,IAAWQ,cAAzB,8BAIH1B,EAAO8B,OAAS9B,EAAO8B,MAAMnC,SAC1B,uBAAGZ,UAAWmC,IAAWQ,cAAzB,iCAIJ,2BAAON,QAAQ,cAAcrC,UAAWmC,IAAWG,OAAnD,gBACA,2BAAOC,KAAK,cAAcC,IAAKzB,EAAS,CAAE0B,UAAU,MACnDxB,EAAO+B,aACJ,uBAAGhD,UAAWmC,IAAWQ,cAAzB,6BAIJ,2BAAOM,KAAK,SAASC,SAAUxC,IAC/B,uBAAGV,UAAWmC,IAAWvB,SAAUA,K,gBC5EpC,SAASuC,IACpB,OACI,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,KACI,yDACA,0BAAMb,KAAK,cAAcc,QAAQ,yBAErC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,UAAU,EAAMC,MAAM,IAC9B,kBAACxD,EAAD,MACA,kBAACS,EAAD","file":"component---src-pages-set-up-a-kcsoc-js-7c38270ab1f4c181623d.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/chanting-f60beff6cd60ed92cbb19b458b6400b9.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"setUpAKCSOCInfo-module--container--qwECI\",\"infoContainer\":\"setUpAKCSOCInfo-module--info-container--2EeAT\",\"instruction\":\"setUpAKCSOCInfo-module--instruction--2nbnn\",\"chanting\":\"setUpAKCSOCInfo-module--chanting--1TMYV\"};","import React from \"react\"\nimport SetUpAKCSOCInfoStyles from \"../../styles/components/set-up-a-kcsoc/setUpAKCSOCInfo.module.scss\"\nimport chanting from \"../../../static/chanting.jpg\"\n\nexport default function SetUpAKCSOCInfo() {\n    return (\n        <div className={SetUpAKCSOCInfoStyles.container}>\n            <h1>Set up a KCSOC</h1>\n            <div>\n                <div className={SetUpAKCSOCInfoStyles.infoContainer}>\n                    <div>\n                        <p>\n                            KCSOC has grown over the years! We now have over 30\n                            different societies in universities around the UK\n                            and abroad. However, we're always looking to expand\n                            and bring the joy of Krishna Consciousness,\n                            philosophy and meditation to as many people as\n                            possible.\n                        </p>\n                        <p>\n                            Don't see a KCSOC near you? Does a KCSOC not exist\n                            in your university? Help start one up!\n                        </p>\n                        <p>\n                            The KCSOC National Team can help you set up a KCSOC\n                            at your university, find speakers and ambassadors\n                            and help run all events. We've got your back and can\n                            support you 100%!\n                        </p>\n                    </div>\n\n                    <img\n                        className={SetUpAKCSOCInfoStyles.chanting}\n                        src={chanting}\n                        alt=\"Chanting\"\n                    />\n                </div>\n                <p className={SetUpAKCSOCInfoStyles.instruction}>\n                    Fill out your information below and a member of the KCSOC\n                    National team will reach out to help you set up a KCSOC.\n                </p>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport formStyles from \"../../styles/form.module.scss\"\n\nexport default function SetUpAKCSOCForm() {\n    const [disabledButton, setDisabledButton] = useState(false)\n    const [message, setMessage] = useState(\"\")\n\n    const { register, handleSubmit, errors, reset } = useForm()\n\n    const url = process.env.GATSBY_SERVER_URL.replace(/\\/$/, \"\")\n\n    const onSubmit = async data => {\n        try {\n            setDisabledButton(true)\n            setMessage(\"\")\n            const res = await fetch(`${url}/forms/set-up-a-kcsoc`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(data),\n            })\n            reset()\n            if (res.status === 201) {\n                setMessage(\"Form submitted successfully\")\n            } else {\n                setMessage(\"Form submission failed\")\n            }\n\n            setDisabledButton(false)\n        } catch (e) {\n            setDisabledButton(false)\n\n            console.log(e)\n        }\n    }\n\n    return (\n        <div className={formStyles.container}>\n            <form className={formStyles.form} onSubmit={handleSubmit(onSubmit)}>\n                <label htmlFor=\"firstName\" className={formStyles.label}>First Name</label>\n                <input name=\"firstName\" ref={register({ required: true })} />\n                {errors.firstName && (\n                    <p className={formStyles.errorMessage}>\n                        First name is required.\n                    </p>\n                )}\n                <label htmlFor=\"lastName\" className={formStyles.label}>Last Name</label>\n                <input name=\"lastName\" ref={register({ required: true })} />\n                {errors.lastName && (\n                    <p className={formStyles.errorMessage}>\n                        Last name is required.\n                    </p>\n                )}\n                <label htmlFor=\"email\" className={formStyles.label}>Email Address</label>\n                <input\n                    name=\"email\"\n                    ref={register({\n                        required: true,\n                        pattern: {\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                            message: \"Hello\",\n                        },\n                    })}\n                />\n                {errors.email && !errors.email.message && (\n                    <p className={formStyles.errorMessage}>\n                        Email address is required.\n                    </p>\n                )}\n                {errors.email && errors.email.message && (\n                    <p className={formStyles.errorMessage}>\n                        Valid email address required.\n                    </p>\n                )}\n                <label htmlFor=\"phoneNumber\" className={formStyles.label}>Phone Number</label>\n                <input name=\"phoneNumber\" ref={register({ required: true })} />\n                {errors.phoneNumber && (\n                    <p className={formStyles.errorMessage}>\n                        Phone number is required.\n                    </p>\n                )}\n                <input type=\"submit\" disabled={disabledButton} />\n                <p className={formStyles.message}>{message}</p>\n            </form>\n        </div>\n    )\n}\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport FadeIn from \"../components/fadeIn\"\nimport Header from \"../components/header\"\nimport SetUpAKCSOCInfo from \"../components/set-up-a-kcsoc/setUpAKCSOCInfo\"\nimport SetUpAKCSOCForm from \"../components/set-up-a-kcsoc/setUpAKCSOCForm\"\nimport Layout from \"../components/layout\"\n\nexport default function SetUpAKCSOC() {\n    return (\n        <Layout>\n            <Helmet>\n                <title>Set Up a KCSOC | KCSOC</title>\n                <meta name=\"description\" content=\"Help set up a KCSOC\" />\n            </Helmet>\n            <FadeIn>\n                <Header isOpaque={true} dark={true} />\n                <SetUpAKCSOCInfo />\n                <SetUpAKCSOCForm />\n            </FadeIn>\n        </Layout>\n    )\n}\n"],"sourceRoot":""}